version: 2
jobs:
  test:
    docker:
      - image: circleci/node:10-browsers
    steps:
      - checkout
      - attach_workspace:
          at: ~/krit/vue-watch
      - restore_cache:
          key: v2-package-lock-{{ checksum "package-lock.json" }}-1
      - run: npm install
      - save_cache:
          key: v2-package-lock-{{ checksum "package-lock.json" }}-1
          paths:
            - ./node_modules
      - run:
          name: Lint
          command: npm run lint
      - run:
          name: Test
          command: npm run test:unit

  build:
    docker:
      - image: circleci/node:10-browsers
    parallelism: 1
    steps:
      - checkout
      - attach_workspace:
          at: ~/krit/vue-watch
      - restore_cache:
          key: v2-package-lock-{{ checksum "package-lock.json" }}-1

      - run: npm install
      - save_cache:
          key: v2-package-lock-{{ checksum "package-lock.json" }}-1
          paths:
            - ./node_modules
      - run:
          name: Build
          command: |
            source .circleci/setup-env.sh
            NODE_ENV=production npm run build-$BUILD_NAME   # we should be building for production if it is being persisted and deployed
      - persist_to_workspace:
          root: .
          paths: dist

  deploy:
    docker:
      - image: circleci/golang:1.9.6
    parallelism: 1
    working_directory: ~/krit/vue-watch
    steps:
      - checkout
      - attach_workspace:
          at:  ~/krit/vue-watch
      - restore_cache:
          key: v1-pkg-cache
      - run: go get -v github.com/bep/s3deploy
      - save_cache:
          key: v1-pkg-cache
          paths:
            - /go/pkg
      - run:
          name: Deploy to S3
          command: |
            source .circleci/setup-env.sh
            s3deploy -source=dist/ -region=us-east-1 -bucket=$AWS_BUCKET_NAME -distribution-id=$CLOUDFRONT_DISTRIBUTION_ID

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - test
      - build:
          requires:
            - test
          filters:
            branches:
              only:
              - development
              - master
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - development
                - master